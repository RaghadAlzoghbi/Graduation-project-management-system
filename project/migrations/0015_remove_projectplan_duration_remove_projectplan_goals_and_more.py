# Generated by Django 4.2.19 on 2025-04-22 20:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0008_coordinator_is_super'),
        ('project', '0014_project_team_member_count'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='projectplan',
            name='duration',
        ),
        migrations.RemoveField(
            model_name='projectplan',
            name='goals',
        ),
        migrations.RemoveField(
            model_name='projectplan',
            name='outputs',
        ),
        migrations.RemoveField(
            model_name='projectplan',
            name='tasks',
        ),
        migrations.AddField(
            model_name='project',
            name='duration',
            field=models.IntegerField(blank=True, help_text='Project duration (in weeks or months)', null=True),
        ),
        migrations.AddField(
            model_name='projectplan',
            name='completion_status',
            field=models.IntegerField(blank=True, default=2, help_text='Project status in %'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='ProjectTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Task Name', max_length=255)),
                ('outputs', models.TextField(blank=True, help_text='Expected outputs')),
                ('goals', models.TextField(blank=True, help_text='Task goals')),
                ('deliverable_text', models.TextField(blank=True, help_text='Text-based deliverable (if applicable)', null=True)),
                ('deliverable_file', models.FileField(blank=True, help_text='File-based deliverable (PDF, DOCX, ZIP, etc.)', null=True, upload_to='task_deliverables/')),
                ('deadline_days', models.PositiveIntegerField(blank=True, help_text='Task duration or deadline in days', null=True)),
                ('task_status', models.CharField(choices=[('to do', 'To Do'), ('in progress', 'In Progress'), ('done', 'Done')], default='to do', help_text='Task Status', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assign_to', models.ForeignKey(blank=True, help_text='Student assigned to the task', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tasks', to='users.student')),
                ('project', models.ForeignKey(help_text='The project this task belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='project.project')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Log message or update description')),
                ('timestamp', models.DateTimeField(auto_now_add=True, help_text='Date and time of the log entry')),
                ('log_type', models.CharField(blank=True, help_text='Optional tag or type (e.g. status update, deliverable, note)', max_length=100, null=True)),
                ('attachment', models.FileField(blank=True, help_text='Optional file attachment related to this log', null=True, upload_to='log_attachments/')),
                ('project', models.ForeignKey(help_text='Project related to this log', on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='project.project')),
                ('user', models.ForeignKey(blank=True, help_text='User who created this log', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project_logs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
