# Generated by Django 5.1.7 on 2025-04-18 19:07

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('project', '0001_initial'),
        ('university', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='annualgrade',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_annual_grades', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='annualgrade',
            name='supervisor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervised_annual_grades', to='users.supervisor'),
        ),
        migrations.AddField(
            model_name='feedbackexchange',
            name='receiver',
            field=models.ForeignKey(blank=True, help_text='The receiver of the feedback. If left blank, feedback is sent to all students in the project.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_received', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='feedbackexchange',
            name='sender',
            field=models.ForeignKey(help_text='User who sent the feedback.', on_delete=django.db.models.deletion.CASCADE, related_name='sent_feedbacks', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='project',
            name='coordinator',
            field=models.ForeignKey(blank=True, help_text='Coordinator responsible for the project', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='users.coordinator'),
        ),
        migrations.AddField(
            model_name='project',
            name='department',
            field=models.ForeignKey(blank=True, help_text='Department responsible for the project', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='university.department'),
        ),
        migrations.AddField(
            model_name='project',
            name='supervisor',
            field=models.ForeignKey(blank=True, help_text='Supervisor managing the project (teacher who accepted the proposal)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projects', to='users.supervisor'),
        ),
        migrations.AddField(
            model_name='feedbackexchange',
            name='project',
            field=models.ForeignKey(help_text='The project associated with this feedback.', on_delete=django.db.models.deletion.CASCADE, related_name='feedback_exchanges', to='project.project'),
        ),
        migrations.AddField(
            model_name='annualgrade',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annual_grades', to='project.project'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='project.project'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.role'),
        ),
        migrations.AddField(
            model_name='projectmembership',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectplan',
            name='project',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='plan', to='project.project'),
        ),
        migrations.AddField(
            model_name='projectproposal',
            name='department',
            field=models.ForeignKey(blank=True, help_text='Department responsible for the project', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='proposals', to='university.department'),
        ),
        migrations.AddField(
            model_name='projectproposal',
            name='proposed_to',
            field=models.ForeignKey(blank=True, help_text='If submitted by a student, specify the recipient (e.g. teacher/coordinator)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_proposals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectproposal',
            name='submitted_by',
            field=models.ForeignKey(help_text='User who submitted this proposal', on_delete=django.db.models.deletion.CASCADE, related_name='project_proposals', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='projectproposal',
            name='team_members',
            field=models.ManyToManyField(blank=True, help_text='For student proposals: list the team members who will work on the project', related_name='team_proposals', to='users.student'),
        ),
        migrations.AddField(
            model_name='project',
            name='proposal',
            field=models.OneToOneField(blank=True, help_text='The proposal that generated this project (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='accepted_project', to='project.projectproposal'),
        ),
        migrations.AddField(
            model_name='studentprojectmembership',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_memberships', to='project.project'),
        ),
        migrations.AddField(
            model_name='studentprojectmembership',
            name='student',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='project_membership', to='users.student'),
        ),
        migrations.AlterUniqueTogether(
            name='annualgrade',
            unique_together={('supervisor', 'student', 'project')},
        ),
        migrations.AlterUniqueTogether(
            name='projectmembership',
            unique_together={('user', 'project', 'role')},
        ),
    ]
